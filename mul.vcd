$date
	Tue Sep  8 18:10:14 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_bench $end
$var wire 1 ! ldP $end
$var wire 1 " ldB $end
$var wire 1 # ldA $end
$var wire 1 $ eqZ $end
$var wire 1 % done $end
$var wire 1 & decB $end
$var wire 1 ' clrP $end
$var reg 1 ( clk $end
$var reg 16 ) data_in [15:0] $end
$var reg 1 * start $end
$scope module controlP $end
$var wire 1 ( clk $end
$var wire 1 * start $end
$var wire 1 $ eqZ $end
$var reg 1 ' clrP $end
$var reg 1 & decB $end
$var reg 1 % done $end
$var reg 1 # ldA $end
$var reg 1 " ldB $end
$var reg 1 ! ldP $end
$var reg 3 + state [2:0] $end
$upscope $end
$scope module dataP $end
$var wire 16 , Bus [15:0] $end
$var wire 1 ( clk $end
$var wire 1 ' clrP $end
$var wire 16 - data_in [15:0] $end
$var wire 1 & decB $end
$var wire 1 # ldA $end
$var wire 1 " ldB $end
$var wire 1 ! ldP $end
$var wire 1 $ eqZ $end
$var wire 16 . Z [15:0] $end
$var wire 16 / Y [15:0] $end
$var wire 16 0 X [15:0] $end
$var wire 16 1 Bout [15:0] $end
$scope module Ad $end
$var wire 16 2 Z [15:0] $end
$var wire 16 3 Y [15:0] $end
$var wire 16 4 X [15:0] $end
$upscope $end
$scope module comp_B $end
$var wire 1 $ eqZ $end
$var wire 16 5 Bout [15:0] $end
$upscope $end
$scope module reg_A $end
$var wire 16 6 Bus [15:0] $end
$var wire 1 ( clk $end
$var wire 1 # ldA $end
$var reg 16 7 X [15:0] $end
$upscope $end
$scope module reg_B $end
$var wire 16 8 Bus [15:0] $end
$var wire 1 ( clk $end
$var wire 1 & decB $end
$var wire 1 " ldB $end
$var reg 16 9 Bout [15:0] $end
$upscope $end
$scope module reg_P $end
$var wire 16 : Z [15:0] $end
$var wire 1 ( clk $end
$var wire 1 ' clrP $end
$var wire 1 ! ldP $end
$var reg 16 ; Y [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;
bx :
bx 9
b0 8
bx 7
b0 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
b0 -
b0 ,
b0 +
0*
b0 )
0(
0'
0&
0%
x$
0#
0"
0!
$end
#2
1*
#5
1#
b1 +
1(
#7
b10001 ,
b10001 6
b10001 8
b10001 )
b10001 -
#10
0(
#15
1'
1"
0#
b10001 0
b10001 4
b10001 7
b10 +
1(
#17
b101 ,
b101 6
b101 8
b101 )
b101 -
#20
0(
#25
1&
0'
1!
0"
b11 +
b10001 .
b10001 2
b10001 :
b0 /
b0 3
b0 ;
0$
b101 1
b101 5
b101 9
1(
#30
0(
#35
b100 1
b100 5
b100 9
b100010 .
b100010 2
b100010 :
b10001 /
b10001 3
b10001 ;
1(
#40
0(
#45
b110011 .
b110011 2
b110011 :
b100010 /
b100010 3
b100010 ;
b11 1
b11 5
b11 9
1(
#50
0(
#55
b10 1
b10 5
b10 9
b1000100 .
b1000100 2
b1000100 :
b110011 /
b110011 3
b110011 ;
1(
#60
0(
#65
b1010101 .
b1010101 2
b1010101 :
b1000100 /
b1000100 3
b1000100 ;
1$
b1 1
b1 5
b1 9
1(
#70
0(
#75
0&
0!
1%
0$
b0 1
b0 5
b0 9
b1100110 .
b1100110 2
b1100110 :
b1010101 /
b1010101 3
b1010101 ;
b100 +
1(
#80
0(
#85
1(
#90
0(
#95
1(
#100
0(
#102
